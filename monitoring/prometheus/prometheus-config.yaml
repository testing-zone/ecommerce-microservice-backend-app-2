apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "ecommerce_rules.yml"

    scrape_configs:
      # Prometheus self-monitoring
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # User Service
      - job_name: 'user-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - ecommerce
            - ecommerce-dev
            - ecommerce-staging
            - ecommerce-prod
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: user-service.*
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        metrics_path: /actuator/prometheus

      # Product Service
      - job_name: 'product-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - ecommerce
            - ecommerce-dev
            - ecommerce-staging
            - ecommerce-prod
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: product-service.*
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        metrics_path: /actuator/prometheus

      # Order Service
      - job_name: 'order-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - ecommerce
            - ecommerce-dev
            - ecommerce-staging
            - ecommerce-prod
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: order-service.*
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        metrics_path: /actuator/prometheus

      # Payment Service
      - job_name: 'payment-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - ecommerce
            - ecommerce-dev
            - ecommerce-staging
            - ecommerce-prod
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: payment-service.*
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        metrics_path: /actuator/prometheus

      # Shipping Service
      - job_name: 'shipping-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - ecommerce
            - ecommerce-dev
            - ecommerce-staging
            - ecommerce-prod
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: shipping-service.*
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        metrics_path: /actuator/prometheus

      # Favourite Service
      - job_name: 'favourite-service'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - ecommerce
            - ecommerce-dev
            - ecommerce-staging
            - ecommerce-prod
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: favourite-service.*
        - source_labels: [__meta_kubernetes_endpoint_port_name]
          action: keep
          regex: http
        - source_labels: [__meta_kubernetes_namespace]
          target_label: namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: service
        - source_labels: [__meta_kubernetes_pod_name]
          target_label: pod
        metrics_path: /actuator/prometheus

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

  ecommerce_rules.yml: |
    groups:
    - name: ecommerce.rules
      rules:
      # Service availability rules
      - alert: ServiceDown
        expr: up == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "{{ $labels.job }} has been down for more than 2 minutes."

      # High response time alerts
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_server_requests_duration_seconds_bucket[5m])) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time on {{ $labels.job }}"
          description: "95th percentile response time is {{ $value }}s on {{ $labels.job }}"

      # High error rate alerts
      - alert: HighErrorRate
        expr: rate(http_server_requests_total{status=~"5.."}[5m]) > 0.1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "High error rate on {{ $labels.job }}"
          description: "Error rate is {{ $value }} errors per second on {{ $labels.job }}"

      # Memory usage alerts
      - alert: HighMemoryUsage
        expr: (jvm_memory_used_bytes / jvm_memory_max_bytes) > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on {{ $labels.job }}"
          description: "Memory usage is {{ $value | humanizePercentage }} on {{ $labels.job }}" 