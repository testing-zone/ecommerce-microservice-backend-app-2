# ============================================================================
# DEPLOYMENT COMPLETO E-COMMERCE MICROSERVICES
# ============================================================================
# Archivo unificado que contiene todos los contratos K8s necesarios
# Para desplegar: kubectl apply -f k8s-all-services.yaml
# ============================================================================

apiVersion: v1
kind: Namespace
metadata:
  name: ecommerce
  labels:
    name: ecommerce
    project: ecommerce-microservices

---
# SERVICE DISCOVERY
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-discovery
  namespace: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service-discovery
  template:
    metadata:
      labels:
        app: service-discovery
    spec:
      containers:
      - name: service-discovery
        image: service-discovery-ecommerce:latest
        ports:
        - containerPort: 8761
        env:
        - name: EUREKA_CLIENT_REGISTER_WITH_EUREKA
          value: "false"
        - name: EUREKA_CLIENT_FETCH_REGISTRY
          value: "false"
---
apiVersion: v1
kind: Service
metadata:
  name: service-discovery
  namespace: ecommerce
spec:
  type: NodePort
  ports:
  - port: 8761
    targetPort: 8761
    nodePort: 30761
  selector:
    app: service-discovery

---
# API GATEWAY
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: api-gateway-ecommerce:latest
        ports:
        - containerPort: 8080
        env:
        - name: EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE
          value: "http://service-discovery:8761/eureka/"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: ecommerce
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
  selector:
    app: api-gateway

---
# PROXY CLIENT (FRONTEND)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-client
  namespace: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: proxy-client
  template:
    metadata:
      labels:
        app: proxy-client
    spec:
      containers:
      - name: proxy-client
        image: proxy-client-ecommerce:latest
        ports:
        - containerPort: 8900
        env:
        - name: API_GATEWAY_URL
          value: "http://api-gateway:8080"
---
apiVersion: v1
kind: Service
metadata:
  name: proxy-client
  namespace: ecommerce
spec:
  type: NodePort
  ports:
  - port: 8900
    targetPort: 8900
    nodePort: 30900
  selector:
    app: proxy-client
