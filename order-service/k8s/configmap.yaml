apiVersion: v1
kind: ConfigMap
metadata:
  name: order-service-config
  namespace: ecommerce
  labels:
    app: order-service
    version: v1
data:
  application.properties: |
    # Order Service Configuration
    server.port=8083
    spring.application.name=order-service
    
    # Database Configuration
    spring.datasource.url=jdbc:h2:mem:orderdb
    spring.datasource.driver-class-name=org.h2.Driver
    spring.datasource.username=sa
    spring.datasource.password=
    spring.h2.console.enabled=true
    spring.jpa.hibernate.ddl-auto=create-drop
    spring.jpa.show-sql=true
    
    # Eureka Configuration
    eureka.client.service-url.defaultZone=http://service-discovery:8761/eureka/
    eureka.client.register-with-eureka=true
    eureka.client.fetch-registry=true
    eureka.instance.prefer-ip-address=true
    eureka.instance.hostname=${HOSTNAME:order-service}
    
    # Management Endpoints
    management.endpoints.web.exposure.include=health,info,metrics,prometheus
    management.endpoint.health.show-details=always
    management.health.circuitbreakers.enabled=true
    management.health.ratelimiters.enabled=true
    
    # Logging
    logging.level.com.ecommerce.order=DEBUG
    logging.level.root=INFO
    logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
    
    # Circuit Breaker
    resilience4j.circuitbreaker.instances.payment-service.slidingWindowSize=10
    resilience4j.circuitbreaker.instances.payment-service.failureRateThreshold=50
    resilience4j.circuitbreaker.instances.payment-service.waitDurationInOpenState=30000
    
    # Microservices URLs
    microservices.user-service.url=http://user-service:8087
    microservices.product-service.url=http://product-service:8082
    microservices.payment-service.url=http://payment-service:8084
    microservices.shipping-service.url=http://shipping-service:8085 